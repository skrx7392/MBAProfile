//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MBAProfile.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> courses { get; set; }
        public virtual DbSet<Major> Majors { get; set; }
        public virtual DbSet<Program> Programs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Student_AcademicStatus> Student_AcademicStatus { get; set; }
        public virtual DbSet<Student_TrainingStatus> Student_TrainingStatus { get; set; }
        public virtual DbSet<Training> Trainings { get; set; }
        public virtual DbSet<UCMUser> UCMUsers { get; set; }
    
        public virtual int AddCourse(string name, string courseNumber, string cCode, string preqId, Nullable<bool> prereqIsActive)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var courseNumberParameter = courseNumber != null ?
                new ObjectParameter("CourseNumber", courseNumber) :
                new ObjectParameter("CourseNumber", typeof(string));
    
            var cCodeParameter = cCode != null ?
                new ObjectParameter("CCode", cCode) :
                new ObjectParameter("CCode", typeof(string));
    
            var preqIdParameter = preqId != null ?
                new ObjectParameter("PreqId", preqId) :
                new ObjectParameter("PreqId", typeof(string));
    
            var prereqIsActiveParameter = prereqIsActive.HasValue ?
                new ObjectParameter("PrereqIsActive", prereqIsActive) :
                new ObjectParameter("PrereqIsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCourse", nameParameter, courseNumberParameter, cCodeParameter, preqIdParameter, prereqIsActiveParameter);
        }
    
        public virtual int UpdateCourse(Nullable<int> courseId, string name, string courseNumber, string cCode, string preqId, Nullable<bool> prereqIsActive)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var courseNumberParameter = courseNumber != null ?
                new ObjectParameter("CourseNumber", courseNumber) :
                new ObjectParameter("CourseNumber", typeof(string));
    
            var cCodeParameter = cCode != null ?
                new ObjectParameter("CCode", cCode) :
                new ObjectParameter("CCode", typeof(string));
    
            var preqIdParameter = preqId != null ?
                new ObjectParameter("PreqId", preqId) :
                new ObjectParameter("PreqId", typeof(string));
    
            var prereqIsActiveParameter = prereqIsActive.HasValue ?
                new ObjectParameter("PrereqIsActive", prereqIsActive) :
                new ObjectParameter("PrereqIsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourse", courseIdParameter, nameParameter, courseNumberParameter, cCodeParameter, preqIdParameter, prereqIsActiveParameter);
        }
    }
}
